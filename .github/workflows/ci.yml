# .github/workflows/ci.yml
name: Python CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # --- ДОБАВЛЕН НОВЫЙ ШАГ ---
      - name: Install uv and Create venv # Устанавливаем uv и создаем окружение
        run: |
          pip install uv
          uv venv # Создаем .venv в корне проекта на runner'е
      # -------------------------

      # Шаг установки зависимостей ТЕПЕРЬ будет работать,
      # т.к. 'uv pip install' внутри 'make install' найдет созданный .venv
      - name: Install dependencies
        run: make install # Эта команда вызовет 'uv pip install .[dev]' из Makefile

      # Шаг 4: Запуск линтера и тестов
      - name: Run linter and pytest
        run: make check # Эта команда вызовет 'uv run ruff ...' и 'uv run pytest'

      # Шаг 5: Запуск тестов с генерацией отчета о покрытии
      - name: Run test coverage
        run: make test-coverage # Эта команда вызовет 'uv run pytest --cov...'

      # Шаг 6: Запуск сканера SonarQube
      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v5
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          # SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.projectKey=Jevda_python-project-50
            -Dsonar.organization=jevda
            -Dsonar.python.coverage.reportPaths=coverage.xml